% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/string_tools.R
\name{uw}
\alias{uw}
\title{'Unwrap' strings by ignoring hard-wrapping from the source code}
\usage{
uw(..., collapse = " ", join = " ")
}
\arguments{
\item{...}{(Character) Vectors that you want to collapse into a single string.
They will be coerced to \code{Character}.}

\item{collapse}{(Character) All of the elements in \code{...} will be joined together,
with \code{collapse} as the separator between them.}

\item{join}{(Character) Separate lines will be joined with this string.}
}
\value{
A string with all elements in \code{...} joined together and separated
with \code{collapse}. Linebreaks that \strong{are not} immediately followed by one or
more spaces will be kept.
}
\description{
It is often necessary to break a very long string (e.g. a figure caption) across
several lines in your source code to keep it readable. In base R, you do this by
breaking the caption into several substrings and \code{paste()}ing them together, which
is kind of clumsy. This function lets you write a single string that is visually
hard-wrapped with newlines and spaces, but removes those whitespace characters
from the final output.
}
\details{
\code{uw()} will replace any linebreak that is followed by any number of
spaces with a single space (or whatever string you specify in the \code{replace}
argument). This means that \strong{if you want to insert a linebreak \code{\\n} manually,
then it should not have any spaces after it}. A \code{\\n} that is at the very end
of a line will be kept.

Also note that since \code{uw()} uses the presence of indenting spaces to decide
whether a piece of text is hard-wrapped, text that merely goes to the 0th column
is not unwrapped. Compare:\preformatted{text <- "This will be
        unwrapped by uw()."

text <- "This will NOT
be unwrapped by uw()."
}
}
\section{Authors}{

\itemize{
\item Desi Quintans (\url{http://www.desiquintans.com})
}
}

\examples{
text <- "Here's an example of some text
        that you might want to break
        across many lines.\\n
        But this line should be separate."

print(text)

#> [1] "Here's an example of some text\\n        that you might want to break..."

cat(text)

#> Here's an example of some text
#>         that you might want to break
#>         across multiple lines.
#>
#>         But this line should be separate.

uw(text)

#> [1] "Here's an example of some text that you might want to break across many..."

cat(.Last.value)

#> Here's an example of some text that you might want to break across many lines.
#> But this line should be separate.

uw(text, join = "/")
#> [1] "Here's an example of some text/that you might want to break/across many..."

cat(.Last.value)
#> Here's an example of some text/that you might want to break/across many lines.
#> /But this line should be separate.

}
