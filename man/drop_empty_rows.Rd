% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dataframe_tools.R
\name{drop_empty_rows}
\alias{drop_empty_rows}
\title{Drop 'empty' rows in a dataframe}
\usage{
drop_empty_rows(df, from = 1, to = NULL, cols = NULL)
}
\arguments{
\item{df}{(Dataframe) A dataframe.}

\item{from, to}{(Numeric or \code{NULL}) The start and end of a continuous range of columns
that will be considered for the empty/not-empty decision. For example, columns that
are always filled should be omitted (see examples). If \code{to} is \code{NULL}, it defaults
to the last column in \code{df} so that \code{from = 2, to = NULL} is the same as
\code{2:length(df)}.}

\item{cols}{(Numeric or \code{NULL}) A numeric vector of the columns to consider. This
allows you to select non-contiguous columns. If the \code{cols} argument is being used
(not-\code{NULL}), \code{from} and \code{to} will be ignored.}
}
\value{
A copy of \code{df} with all empty rows removed, based on whether the rows in the
selected columns were empty.
}
\description{
Deletes rows from a dataframe if they are 'empty'. A row is empty when every single
cell is \code{NA}, \code{NULL}, \code{""}, or \code{0}. This function is meant for formatting printed data;
it's often useful to omit uninformative rows to reduce visual clutter when you are
reading a table. Be careful when using this function to clean or manipulate data
because zeroes are often informative.
}
\section{Authors}{

\itemize{
\item Desi Quintans (\url{http://www.desiquintans.com})
}
}

\examples{
data <- data.frame(name = c("Jim", "Jane", "Janice", "Joe", "Jay"),
                   a = c(0, 0, 1, NA, 0),
                   b = c(1, "", 1, NA, 0),
                   c = c(1, 0, 2, 0, 0),
                   d = c(0, 0, 4, 0, 0),
                   e = c(0, 0, 5, 0, 0),
                   f = c(3, 0, 0, 0, 3),
                   stringsAsFactors = FALSE)

data

#>           1  2    3 4 5 6 7
#>
#>        name  a    b c d e f
#> 1       Jim  0    1 1 0 0 3
#> 2      Jane  0      0 0 0 0
#> 3    Janice  1    1 2 4 5 0
#> 4       Joe NA <NA> 0 0 0 0
#> 5       Jay  0    0 0 0 0 3

drop_empty_rows(data)

# Returns the whole dataframe because column 1 ('name') is never empty.
#>        name  a    b c d e f
#> 1       Jim  0    1 1 0 0 3
#> 2      Jane  0      0 0 0 0
#> 3    Janice  1    1 2 4 5 0
#> 4       Joe NA <NA> 0 0 0 0
#> 5       Jay  0    0 0 0 0 3

drop_empty_rows(data, from = 2)

# We get the desired result when 'name' is omitted.
#>        name  a  b c d e f
#> 1       Jim  0  1 1 0 0 3
#> 3    Janice  1  1 2 4 5 0
#> 5       Jay  0  0 0 0 0 3

drop_empty_rows(data, cols = c(2, 5, 6))

# Non-contiguous columns can be selected with 'cols'.
#>        name  a  b c d e f
#> 3    Janice  1  1 2 4 5 0

}
