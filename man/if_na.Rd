% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r_tools.R
\name{if_na}
\alias{if_na}
\title{Return a value or expression if something is NA}
\usage{
if_na(x, yes = TRUE, no = NULL)
}
\arguments{
\item{x}{(Vector) A vector of length 1 containing the thing to test.}

\item{yes}{(Any) The value to return if \code{x} is \code{NA}. Can be an expression.}

\item{no}{(Any) The value to return if \code{x} is \strong{not} \code{NA}. Can be an expression.
Set this to \code{NULL} (its default setting) to return \code{x}.}
}
\value{
The object or expression in \code{yes} or \code{no}, depending on the outcome.
}
\description{
This is my take on a simpler alternative to \code{tidyr::replace_na()}. It runs 19
times faster than \code{replace_na()} and 6 times faster than \code{ifelse()}. The trade-off
is that it will only accept a vector of length 1, but that is perfectly fine for
use in a \code{dplyr} pipeline.
}
\section{Authors}{

\itemize{
\item Desi Quintans (\url{http://www.desiquintans.com})
}
}

\examples{
if_na(NA, "It's NA", "It's not NA")
#> [1] "It's NA"

if_na("Return x by default", "It's NA")
#> [1] "Return x by default"

if_na(NA, sample(letters, 10))
#> [1] "s" "v" "d" "l" "b" "a" "x" "e" "m" "g"

}
